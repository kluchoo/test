
name: Build and compile LaTeX documentation and release PDF

on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'

env:
    FILE_NAME: Latex-Documentation
    REPO: ${{ secrets.OWNER }}/${{ secrets.REPO }}
    PACKAGES: graphviz ghostscript inkscape python3
    IS_TAG: ${{ startsWith(github.ref, 'refs/tags/') }}
      
jobs:
  build_latex:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
      
      - name: check for cache
        uses: awalsh128/cache-apt-pkgs-action@latest
        id: cache-packages
        with:
          packages: ${{ env.PACKAGES }}
          version: 1.0
          execute_install_scripts: true
      - name: install packages
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: sudo apt update && sudo apt install -y ${{ env.PACKAGES }}

      - name: Cache Docker images
        # if: env.IS_TAG == 'true'
        id: docker_cache
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('Dockerfile') }}

      - name: Pull TeX Live Docker image if not cached
        if: steps.docker_cache.outputs.cache-hit != 'true'
        run: docker pull ghcr.io/xu-cheng/texlive-full:latest

      - name: Compile LaTeX document
        if: env.IS_TAG == 'true'
        uses: xu-cheng/latex-action@v3
        with:
          root_file: dokument.tex
          extra_system_packages: python3 inkscape
      
      
      - name: Rename generated pdf file
        if: env.IS_TAG == 'true'
        run: mv dokument.pdf ${{env.FILE_NAME}}.pdf
      
      - name: Compress PDF
        if: env.IS_TAG == 'true'
        run: gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.5 -dNOPAUSE -dQUIET -dBATCH -dPrinted=false -sOutputFile="${{env.FILE_NAME}}-compressed.pdf" "${{env.FILE_NAME}}.pdf"

      - run: |
          newest_tag=$(curl -s https://api.github.com/repos/${{env.REPO}}/releases/latest | jq -r '.tag_name')
          echo "NEWEST_TAG=$newest_tag" >> $GITHUB_ENV


      - name: Release the pdf
        if: env.IS_TAG == 'true'
        uses: ncipollo/release-action@v1
        with:
            artifacts: "${{env.FILE_NAME}}.pdf, ${{env.FILE_NAME}}-compressed.pdf"
            allowUpdates: true

      - name: Release documentaion on other repo
        if: env.IS_TAG == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{env.NEWEST_TAG}}
          files: |
            ./${{env.FILE_NAME}}.pdf
            ./${{env.FILE_NAME}}-compressed.pdf
          repository: ${{env.REPO}}
          token: ${{ secrets.PAT }}